# Ouverture du fichier en mode écriture binaire (wb)
with open("mon_programme.ch8", "wb") as f:
    # Écriture des octets du programme dans le fichier
    #code = [0x60, 0x0A, 0x61, 0x05, 0xA2, 0x1C, 0xD0, 0x11, 0x70, 0x04,        0x12, 0x00, 0x71, 0x02, 0x12, 0x00, 0xA2, 0x1A, 0xD0, 0x11,        0x70, 0x04, 0x12, 0x00, 0x72, 0x02, 0x12, 0x00, 0xA2, 0x1E,        0xD0, 0x11, 0x70, 0x04, 0x12, 0x00, 0x73, 0x02, 0x12, 0x00,        0xA2, 0x1E, 0xD0, 0x11, 0x70, 0x04, 0x12, 0x00, 0x61, 0x0F,        0x80, 0x14, 0x70, 0x01, 0x12, 0x00]
    code = [
    0xA2, 0x20, # LD I, 0x220
    0x60, 0x1F, # LD V0, 0x1F
    0x61, 0x1F, # LD V1, 0x1F
    0xD0, 0x11, # DRW V0, V1, 1
    0x12, 0x06, # JP 0x206

    # Animation de sprite pour "Bonjour OpenAI"
    # Chaque byte représente 8 pixels (4x4) sur l'écran
    0xF0, 0x90, 0x90, 0x90, 0xF0, # B
    0x20, 0x60, 0x20, 0x20, 0x70, # o
    0xF0, 0x80, 0xF0, 0x10, 0xF0, # n
    0xF0, 0x80, 0xF0, 0x80, 0xF0, # j
    0x90, 0x90, 0xF0, 0x90, 0x90, # o
    0xF0, 0x10, 0xF0, 0x80, 0xF0, # u
    0xF0, 0x10, 0xF0, 0x10, 0xF0, # r
    0xF0, 0x80, 0x80, 0x80, 0x80, # space
    0xF0, 0x10, 0xF0, 0x10, 0xF0, # O
    0xF0, 0x90, 0x90, 0x90, 0xF0, # p
    0xF0, 0x80, 0xF0, 0x80, 0xF0, # e
    0xF0, 0x90, 0xF0, 0x90, 0xF0, # n
    0xF0, 0x90, 0xF0, 0x10, 0xF0, # A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, # I

    # Début du programme principal
    0x60, 0x80, # LD V0, 0x80 (position x du point)
    0x61, 0x80, # LD V1, 0x80 (position y du point)
    0xF0, 0x18, # LD ST, V0
    0xF0, 0x15, # LD DT, V0
    0x60, 0x01, # LD V0, 1 (direction x du point)
    0x61, 0x00, # LD V1, 0 (direction y du point)
    0x12, 0x1C ,# JP 0x21C (début de la boucle)
    0x80, 0x40, # LD V0, 0x40 (délai avant de boucler)
    0xF0, 0x07, # LD V0, DT
    0x30, 0x00, # SE V0, 0 (si V0 == 0, saute l'instruction suivante)
    0x12, 0x22, # JP 0x222 (sort de la boucle)
    0x80, 0x10, # LD V0, 0x10 (vitesse du point)
    0x70, 0x01, # ADD V0, 1 (incrémente la vitesse du point)
    0x60, 0x80, # LD V0, 0x80 (position x du point)
    0x70, 0x01, # ADD V0, 1 (déplace le point en x)
    0x64, 0x00, # LD V4, 0 (valeur temporaire)
    0x80, 0x13, # LD V0, DT
    0x40, 0x04, # SNE V0, V4 (saute si V0 != V4)
    0x60, 0x80, # LD V0, 0x80 (position x du point)
    0x70, 0xFE, # ADD V0, 0xFE (rebondit sur les bords de l'écran en x)
    0x60, 0x01, # LD V0, 1 (direction x du point)
    0x90, 0x80, # SE V0, V1 (saute si la direction x est négative)
    0x61, 0x00, # LD V1, 0 (direction y du point)
    0x90, 0x00, # SE V0, V0 (saute si la direction x est positive)
    0x61, 0xFE, # LD V1, 0xFE (direction y négative)
    0x80, 0x40, # LD V0, 0x40 (délai avant de boucler)
    0xF0, 0x18, # LD ST, V0 (démarre un son)
    0x12, 0x1E,] # JP 0x21E (retourne au début de la boucle)
    f.write(bytes(code))
